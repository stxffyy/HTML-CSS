@keyframes bouncing { /*Указываем ключевые кадры при анимации bouncing 
    Ключевой кадр - это свойства элемента (прозрачность, цвет, положение и др.),
    которые должны применяться к элементу в заданный момент времени. Таким образом,
    анимация представляет собой плавный переход стилевых свойств от одного ключевого кадра к другому. Вычисление промежуточных значений между такими кадрами берёт на себя браузер.*/
    
    0% { left: 50px; 
         bottom: 0px; 
         box-shadow:0 0 5px rgba(0, 0, 0, 0.5);
        } /*Первый ключевой кадр */

    50%  {
         left: 150px;
         bottom: 250px;
         box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
     } /*Второй ключевой кадр */
    
     100% {
         left: 350px;
         bottom: 0px;
         box-shadow: 0 50px 50px rgba(0, 0, 0, 0.1);
     } /*Третий ключевой кадр */

} /*Элемент будет изменять значение свойства left (от 50px к 150px до 350px), 
    свойства bottom от 0px к 250px до 0px и
    свойства box-shadow
    0%, 50%, 100% - устанавливают ключевой кадр в % от времени всей анимации*/ 

div {
    animation: bouncing 1s cubic-bezier(.1,.25,.1,1) 0s infinite alternate-reverse both; /*Для анимации bouncing прменим функцию cubic-bezier, которая будет длиться 1s между ключевыми кадрами, 0s - кол-во секунд перед началом анимации, infinite - анимация проигрывается бесконечно, alternate - Каждый нечетный повтор цикла анимации воспроизводятся в нормальном направлении,
        каждый четный повтор воспроизводится в обратном направлении, both - Позволяет оставлять элемент в первом ключевом кадре до начала анимации и задерживать на последнем кадре до конца последней анимации */
    background: lightslategrey;
    display: block;
    width: 120px;
    height: 120px;
    text-align: center;
    border-radius: 150px;
    position: relative;
    margin-top: 250px;
} /*Задаём доп. хар-ки для дива */


div::before {
    content: "Ball";
    display: inline-block;
    margin-top: 40px;
    color: white;
    font-size: 2rem;
} /* Создаем псведоэлемент, который является потомком для div. Добавим содержимое в элемент с помощью content */
