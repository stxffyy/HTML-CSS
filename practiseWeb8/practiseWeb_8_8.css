* {
    padding: 0;
    margin: 0;
} /* задаём свойства всем элементам */

body {
    perspective: 900px; /* расстояние от плоскости экрана до точки сходимости линий; задаёт, насколько выражен эффект перспективы */
    perspective-origin: center -5em; /*Задаёт координаты точки, куда смотрит наблюдатель. Это свойство работает совместно со свойством perspective и определяет точку сходимости линий при перспективе. */
}

.container {
    transform-style: preserve-3d; /* Дочерние элементы будут отображаться в 3D-пространстве */
    animation: rotate 10s infinite linear; /* Анимация rotate длится 10s бесконечно, linear - значит, что ф-ия линейная,
    анимация происходит равномерно на протяжении всего времени, без колебаний в скорости.*/
    display: inline-block;
    width: 200px;
    height: 200px;
    position: relative;
    top: 100px;
    left: 250px;
} /*Задаём характеристики классу container*/

@keyframes rotate {
    100% {
        transform: rotate3d(0, 1, 0, 360deg);
    }
} /* Указываем ключевой кадр для анимации rotate.
     Элемент будет выполнять ф-ию, которая вращает элемент вокруг неподвижной оси в 3D - пространстве, не деформируя его*/

div.side {
    width: 200px;
    height: 200px;
    background-color: #ccc;
    position: absolute;
    outline: 1px solid #000;
    outline-offset: 25px; /* Устанавливает расстояние между рамкой, созданной с помощью свойства outline, и краем или границей элемента добавленной через border.*/
    opacity: 0.8; /*Прозрачность */
} /* задаём хар-ки классам side внутри div*/


/*Задаём ф-ии для данных классов, которые обозначают стороны куба.
Ф-ии сдвигают элемент его относительно его обычного положения по осям XYZ */
.front {
    background: url("images/images/pic6.png");
}

.left {
    transform: translateX(-100px) rotateY(90deg) translateX(100px);
    background: url("images/images/pic1.png");
}

.right {
    transform: translateX(100px) rotateY(90deg) translateX(100px);
    background: url("images/images/pic2.png");
}

.up {
    transform: translateY(-100px) rotateX(90deg) translateY(- 100px);
    background: url("images/images/pic3.png");
}

.down {
    transform: translateY(100px) rotateX(90deg) translateY(- 100px);
    background: url("images/images/pic4.png");
}

.back {
    transform: translateZ(-200px);
    background: url("images/images/pic5.png");
}