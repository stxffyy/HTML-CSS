* {
    padding: 0; 
    margin: 0;
} /* задаём свойства всем элементам */

.wrap {
    width: 200px;
    height: 150px;
    outline: 1px solid #000;
    display: inline-block;
    margin: 35px 50px;
} /*Задаём хар-ки div'ам с классом wrap. */

.wrap>div {
    width: 200px;
    height: 150px;
    background: rgba(144, 235, 242, 0.5);
    display: inline-block;
    position: relative; /* относительное позиционирование*/
    z-index: 2; /* это свойство позволяет элементам накладываться поверх других элементов (с меньшим z-index)*/
    transition: transform 1s; /* Св-во, позволяющее в течение 1s поворачивать, масштабировать, наклонять или сдвигать элемент */
} /* Задаём характеристики div'ам внутри wrap*/

.wrap>div>span {
    position: absolute; /* Абсолютное позиционирование*/
    top: 45%;
    width: 100%;
    text-align: center;
} /* Задаём характеристики span'ам*/

.translateX:hover {
    transform: translateX(50px);
} /* Ф-ия для данного класса, которая при наведении на элемент сдвигает его относительно его обычного положения по оси X*/

.translateY:hover {
    transform: translateY(50px);
} /* Ф-ия для данного класса, которая при наведении на элемент сдвигает его относительно его обычного положения по оси Y */

.translate:hover {
    transform: translate(50px, 50px);
} /* Ф-ия для данного класса, которая при наведении на элемент сдвигает его на новое место,
перемещая относительно обычного положения вправо и вниз, используя координаты X и Y, не затрагивая при этом соседние элементы. Если нужно сдвинуть элемент влево или вверх,
то нужно использовать отрицательные значения. */

.scaleX:hover {
    transform: scaleX(-1);
} /* Ф-ия для данного класса, которая при наведении на элемент масштабирует его по ширине,
делая его шире или уже. Если значение больше единицы, элемент становится шире,
если значение находится между единицей и нулем, элемент становится уже. Отрицательные значения отображают элемент зеркально по горизонтали. */

.scaleY:hover {
    transform: scaleY(-1);
} /* Ф-ия для данного класса, которая при наведении на элемент масштабирует его по высоте,
делая его выше или ниже. Если значение больше единицы, элемент становится выше,
если значение находится между единицей и нулем — ниже. Отрицательные значения отображают элемент зеркально по вертикали.*/

.scaleX15:hover {
    transform: scaleX(1.5);
} /* Ф-ия для данного класса, которая при наведении на элемент */

.scale:hover {
    transform: scale(1.5, 0.5);
} /* Ф-ия для данного класса, которая при наведении на элемент масштабирует его,
делая больше или меньше. Значения от 0 до 1 уменьшают элемент. Первое значение масштабирует элемент по ширине,
второе — по высоте. Отрицательные значения отображают элемент зеркально.*/

.rotate:hover {
    transform: rotate(360deg);
} /* Ф-ия для данного класса, которая при наведении на элемент поворачивает его на заданное количество градусов,
отрицательные значения от -1deg до -360deg поворачивают элемент против часовой стрелки,
положительные — по часовой стрелке. Значение rotate(720deg) поворачивает элемент на два полных оборота. */

.skewX:hover {
    transform: skewX(45deg);
} /* Ф-ия для данного класса, которая при наведении на элемент деформирует его стороны относительно оси X.*/

.skewY:hover {
    transform: skewY(-45deg);
} /* Ф-ия для данного класса, которая при наведении на элемент деформирует его стороны относительно оси Y. */

.skew:hover {
    transform: skew(-20deg, 20deg);
} /* Ф-ия для данного класса, которая при наведении на элемент деформирует его стороны относительно координатных осей. Если указано одно значение,
второе будет определено браузером автоматически.*/

.matrix:hover {
    transform: matrix(1.5, 0, 0.5, 1.2, 50, 0);
} /* Ф-ия для данного класса, которая при наведении на элемент смещает его и задает способ трансформации,
позволяя объединить несколько функций 2D-трансформаций в одной. В качестве трансформации допустимы поворот, масштабирование,
наклон и изменение положения.*/